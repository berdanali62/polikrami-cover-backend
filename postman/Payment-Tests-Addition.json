{
  "info": {
    "name": "Payment Module Tests",
    "description": "Payment endpoint tests to be added to main collection"
  },
  "item": [
    {
      "name": "9. Payment Operations",
      "item": [
        {
          "name": "Initiate Simple Payment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrfToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"orderId\": \"{{orderId}}\",\n  \"paymentMethod\": \"credit_card\",\n  \"returnUrl\": \"{{baseUrl}}/payment/success\",\n  \"cancelUrl\": \"{{baseUrl}}/payment/cancel\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payments/initiate",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payments", "initiate"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Payment initiation successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('paymentId', jsonData.paymentId);",
                  "    if (jsonData.redirectUrl) {",
                  "        console.log('Payment redirect URL:', jsonData.redirectUrl);",
                  "    }",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Initiate Credit Card Payment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrfToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"orderId\": \"{{orderId}}\",\n  \"cardDetails\": {\n    \"cardNumber\": \"4111111111111111\",\n    \"expiryMonth\": \"12\",\n    \"expiryYear\": \"25\",\n    \"cvv\": \"123\",\n    \"cardHolderName\": \"Test User\"\n  },\n  \"billingAddress\": {\n    \"firstName\": \"Test\",\n    \"lastName\": \"User\",\n    \"address\": \"Test Address 123\",\n    \"city\": \"Istanbul\",\n    \"country\": \"TR\",\n    \"zipCode\": \"34000\",\n    \"phone\": \"+90 555 123 4567\",\n    \"email\": \"test@example.com\"\n  },\n  \"installments\": 1\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payments/credit-card",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payments", "credit-card"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Credit card payment initiation successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('paymentId', jsonData.paymentId);",
                  "    console.log('Credit card payment initiated:', jsonData);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Payment Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/payments/{{paymentId}}/status",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payments", "{{paymentId}}", "status"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Payment status retrieved', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Payment status contains required fields', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('status');",
                  "    pm.expect(jsonData).to.have.property('amount');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Mock Payment Success Callback",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/payments/mock/success?orderId={{orderId}}&paymentId={{paymentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payments", "mock", "success"],
              "query": [
                {
                  "key": "orderId",
                  "value": "{{orderId}}"
                },
                {
                  "key": "paymentId",
                  "value": "{{paymentId}}"
                }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Mock payment success callback works', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Payment marked as successful', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.eql('success');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Mock Payment Failure Callback",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/payments/mock/failure?orderId={{orderId}}&paymentId={{paymentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payments", "mock", "failure"],
              "query": [
                {
                  "key": "orderId",
                  "value": "{{orderId}}"
                },
                {
                  "key": "paymentId",
                  "value": "{{paymentId}}"
                }
              ]
            }
          }
        },
        {
          "name": "Payment Callback (Provider)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"orderId\": \"{{orderId}}\",\n  \"paymentId\": \"{{paymentId}}\",\n  \"status\": \"success\",\n  \"transactionId\": \"test_txn_123456\",\n  \"amount\": 35.00,\n  \"currency\": \"TRY\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payments/callback",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payments", "callback"]
            }
          }
        },
        {
          "name": "Refund Payment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrfToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"paymentId\": \"{{paymentId}}\",\n  \"reason\": \"Customer requested refund due to product defect\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/payments/refund",
              "host": ["{{baseUrl}}"],
              "path": ["api", "payments", "refund"]
            }
          }
        }
      ]
    }
  ]
}
