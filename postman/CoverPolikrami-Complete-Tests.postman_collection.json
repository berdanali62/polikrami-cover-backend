{
  "info": {
    "name": "CoverPolikrami API - Complete Tests",
    "description": "Comprehensive API test collection for CoverPolikrami backend",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "accessToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "refreshToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "draftId",
      "value": "",
      "type": "string"
    },
    {
      "key": "projectId",
      "value": "",
      "type": "string"
    },
    {
      "key": "orderId",
      "value": "",
      "type": "string"
    },
    {
      "key": "csrfToken",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "0. Setup & Health Checks",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Health check returns 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Health check returns correct status', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.eql('ok');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get CSRF Token",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/csrf",
              "host": ["{{baseUrl}}"],
              "path": ["csrf"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('CSRF endpoint returns 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "// Extract CSRF token from cookie",
                  "const cookies = pm.cookies.all();",
                  "const csrfCookie = cookies.find(cookie => cookie.name === 'csrf');",
                  "if (csrfCookie) {",
                  "    pm.collectionVariables.set('csrfToken', csrfCookie.value);",
                  "    console.log('CSRF Token set:', csrfCookie.value);",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "1. Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrfToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"Test123!@#\",\n  \"confirmPassword\": \"Test123!@#\",\n  \"name\": \"Test User\",\n  \"role\": \"user\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('User registration successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response contains user data', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.user).to.have.property('id');",
                  "    pm.expect(jsonData.user).to.have.property('email');",
                  "    pm.collectionVariables.set('userId', jsonData.user.id);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Register Designer",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrfToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"designer@example.com\",\n  \"password\": \"Designer123!@#\",\n  \"confirmPassword\": \"Designer123!@#\",\n  \"name\": \"Test Designer\",\n  \"role\": \"designer\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            }
          }
        },
        {
          "name": "Login User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrfToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"Test123!@#\",\n  \"remember\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Login successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Cookies are set', function () {",
                  "    pm.expect(pm.cookies.has('access')).to.be.true;",
                  "    pm.expect(pm.cookies.has('refresh')).to.be.true;",
                  "});",
                  "",
                  "// Extract tokens from cookies for manual testing",
                  "const cookies = pm.cookies.all();",
                  "const accessCookie = cookies.find(cookie => cookie.name === 'access');",
                  "const refreshCookie = cookies.find(cookie => cookie.name === 'refresh');",
                  "",
                  "if (accessCookie) {",
                  "    pm.collectionVariables.set('accessToken', accessCookie.value);",
                  "}",
                  "if (refreshCookie) {",
                  "    pm.collectionVariables.set('refreshToken', refreshCookie.value);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/auth/refresh",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "refresh"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Token refresh successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Forgot Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrfToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/forgot-password",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "forgot-password"]
            }
          }
        },
        {
          "name": "Verify Reset Code",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrfToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"code\": \"1234\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/verify-reset-code",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "verify-reset-code"]
            }
          }
        },
        {
          "name": "Reset Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrfToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"code\": \"1234\",\n  \"password\": \"NewPassword123!@#\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/reset-password",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "reset-password"]
            }
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-CSRF-Token",
                "value": "{{csrfToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "logout"]
            }
          }
        }
      ]
    },
    {
      "name": "2. User Management",
      "item": [
        {
          "name": "Get My Profile",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/users/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "me"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get profile successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Profile contains user data', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('email');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrfToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"phone\": \"+90 555 123 4567\",\n  \"company\": \"Test Company\",\n  \"address1\": \"Test Address 1\",\n  \"city\": \"Istanbul\",\n  \"state\": \"Istanbul\",\n  \"postalCode\": \"34000\",\n  \"country\": \"Turkey\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "profile"]
            }
          }
        },
        {
          "name": "Change Password",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrfToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"currentPassword\": \"Test123!@#\",\n  \"newPassword\": \"NewTest123!@#\",\n  \"confirmPassword\": \"NewTest123!@#\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/password",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "password"]
            }
          }
        }
      ]
    },
    {
      "name": "3. Projects",
      "item": [
        {
          "name": "List My Projects",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/projects",
              "host": ["{{baseUrl}}"],
              "path": ["api", "projects"]
            }
          }
        },
        {
          "name": "Create Project",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrfToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Book Design Project\",\n  \"meta\": {\n    \"description\": \"A test project for book cover design\",\n    \"category\": \"book-cover\",\n    \"tags\": [\"fiction\", \"mystery\"]\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/projects",
              "host": ["{{baseUrl}}"],
              "path": ["api", "projects"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Project creation successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('projectId', jsonData.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Project by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/projects/{{projectId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "projects", "{{projectId}}"]
            }
          }
        },
        {
          "name": "Update Project",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrfToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Book Design Project\",\n  \"meta\": {\n    \"description\": \"Updated description\",\n    \"category\": \"book-cover\",\n    \"tags\": [\"fiction\", \"mystery\", \"thriller\"]\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/projects/{{projectId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "projects", "{{projectId}}"]
            }
          }
        },
        {
          "name": "Add Project Member",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrfToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"{{userId}}\",\n  \"role\": \"editor\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/projects/{{projectId}}/members",
              "host": ["{{baseUrl}}"],
              "path": ["api", "projects", "{{projectId}}", "members"]
            }
          }
        },
        {
          "name": "List Project Members",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/projects/{{projectId}}/members",
              "host": ["{{baseUrl}}"],
              "path": ["api", "projects", "{{projectId}}", "members"]
            }
          }
        },
        {
          "name": "Delete Project",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "X-CSRF-Token",
                "value": "{{csrfToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/projects/{{projectId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "projects", "{{projectId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "4. Drafts",
      "item": [
        {
          "name": "Create Draft",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrfToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"method\": \"upload\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/drafts",
              "host": ["{{baseUrl}}"],
              "path": ["api", "drafts"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Draft creation successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('draftId', jsonData.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "List My Drafts",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/drafts",
              "host": ["{{baseUrl}}"],
              "path": ["api", "drafts"]
            }
          }
        },
        {
          "name": "Get Draft by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/drafts/{{draftId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "drafts", "{{draftId}}"]
            }
          }
        },
        {
          "name": "Update Draft",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrfToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"step\": 2,\n  \"data\": {\n    \"title\": \"My Book Cover\",\n    \"author\": \"Test Author\",\n    \"genre\": \"Fiction\",\n    \"description\": \"A compelling story about...\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/drafts/{{draftId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "drafts", "{{draftId}}"]
            }
          }
        },
        {
          "name": "Get Upload URL",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrfToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"contentType\": \"image/png\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/drafts/{{draftId}}/presign",
              "host": ["{{baseUrl}}"],
              "path": ["api", "drafts", "{{draftId}}", "presign"]
            }
          }
        },
        {
          "name": "Set Message Card",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrfToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"messageCardId\": \"550e8400-e29b-41d4-a716-446655440000\",\n  \"to\": \"Dear Reader\",\n  \"signature\": \"Best wishes, Author\",\n  \"content\": \"Thank you for choosing this book. I hope you enjoy the journey!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/drafts/{{draftId}}/message-card",
              "host": ["{{baseUrl}}"],
              "path": ["api", "drafts", "{{draftId}}", "message-card"]
            }
          }
        },
        {
          "name": "Set Shipping Info",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrfToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"shipping\": {\n    \"senderName\": \"Test Sender\",\n    \"senderPhone\": \"+90 555 123 4567\",\n    \"receiverName\": \"Test Receiver\",\n    \"receiverPhone\": \"+90 555 765 4321\",\n    \"city\": \"Istanbul\",\n    \"district\": \"Kadikoy\",\n    \"address\": \"Test Address, Test Street No: 123, Test Building\",\n    \"company\": \"Test Company\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/drafts/{{draftId}}/shipping",
              "host": ["{{baseUrl}}"],
              "path": ["api", "drafts", "{{draftId}}", "shipping"]
            }
          }
        },
        {
          "name": "Assign Designer",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrfToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"designerId\": \"{{userId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/drafts/{{draftId}}/assign-designer",
              "host": ["{{baseUrl}}"],
              "path": ["api", "drafts", "{{draftId}}", "assign-designer"]
            }
          }
        },
        {
          "name": "Commit Draft (Create Order)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-CSRF-Token",
                "value": "{{csrfToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/drafts/{{draftId}}/commit",
              "host": ["{{baseUrl}}"],
              "path": ["api", "drafts", "{{draftId}}", "commit"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Draft commit successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    const jsonData = pm.response.json();",
                  "    pm.collectionVariables.set('orderId', jsonData.id);",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "5. Orders",
      "item": [
        {
          "name": "List My Orders",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/orders",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders"]
            }
          }
        },
        {
          "name": "Get Order by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/orders/{{orderId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders", "{{orderId}}"]
            }
          }
        },
        {
          "name": "Update Order Status (Test Only)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrfToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"paid\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/orders/{{orderId}}/status",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders", "{{orderId}}", "status"]
            }
          }
        },
        {
          "name": "Cancel Order",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-CSRF-Token",
                "value": "{{csrfToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/orders/{{orderId}}/cancel",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders", "{{orderId}}", "cancel"]
            }
          }
        }
      ]
    },
    {
      "name": "6. Message Cards & Designers",
      "item": [
        {
          "name": "List Message Cards (Public)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/message-cards",
              "host": ["{{baseUrl}}"],
              "path": ["api", "message-cards"]
            }
          }
        },
        {
          "name": "List Designers (Public)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/designers",
              "host": ["{{baseUrl}}"],
              "path": ["api", "designers"]
            }
          }
        }
      ]
    },
    {
      "name": "7. Contact",
      "item": [
        {
          "name": "Send Contact Message",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrfToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test User\",\n  \"email\": \"test@example.com\",\n  \"phone\": \"+90 555 123 4567\",\n  \"message\": \"Hello, I have a question about your book design services. Can you please provide more information about pricing and delivery times? Thank you!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/contact",
              "host": ["{{baseUrl}}"],
              "path": ["api", "contact"]
            }
          }
        }
      ]
    },
    {
      "name": "8. Error Cases & Edge Cases",
      "item": [
        {
          "name": "Unauthorized Access Test",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer invalid_token"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "me"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Unauthorized access returns 401', function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Invalid Data Test",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrfToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"invalid-email\",\n  \"password\": \"123\",\n  \"confirmPassword\": \"456\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Invalid data returns 400', function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test('Error response contains validation errors', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('errors');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "CSRF Protection Test",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"Test123!@#\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Missing CSRF token returns 403', function () {",
                  "    pm.response.to.have.status(403);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Rate Limiting Test",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrfToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"nonexistent@example.com\",\n  \"password\": \"wrongpassword\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          }
        },
        {
          "name": "Non-existent Resource Test",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/projects/550e8400-e29b-41d4-a716-446655440000",
              "host": ["{{baseUrl}}"],
              "path": ["api", "projects", "550e8400-e29b-41d4-a716-446655440000"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Non-existent resource returns 404', function () {",
                  "    pm.response.to.have.status(404);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "exec": [
          "// Auto-refresh CSRF token if needed",
          "if (!pm.collectionVariables.get('csrfToken')) {",
          "    console.log('No CSRF token found, will need to get one first');",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "exec": [
          "// Global test for response time",
          "pm.test('Response time is less than 5000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "// Log response for debugging",
          "if (pm.response.code >= 400) {",
          "    console.log('Error Response:', pm.response.text());",
          "}"
        ]
      }
    }
  ]
}
