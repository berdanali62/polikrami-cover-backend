"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const auth_1 = require("../../middlewares/auth");
const validation_1 = require("../../middlewares/validation");
const asyncHandler_1 = require("../../shared/helpers/asyncHandler");
const zod_1 = require("zod");
const organization_controller_1 = require("./controller/organization.controller");
const organization_dto_1 = require("./dto/organization.dto");
const router = (0, express_1.Router)();
const idParam = zod_1.z.object({ id: zod_1.z.string().uuid() });
const userIdParam = zod_1.z.object({ userId: zod_1.z.string().uuid() });
router.get('/', auth_1.requireAuth, (0, asyncHandler_1.asyncHandler)(organization_controller_1.listMyOrganizationsController));
router.get('/:id', auth_1.requireAuth, (0, validation_1.validateParams)(idParam), (0, asyncHandler_1.asyncHandler)(organization_controller_1.getOrganizationController));
router.post('/', auth_1.requireAuth, (0, validation_1.validateBody)(organization_dto_1.createOrganizationSchema), (0, asyncHandler_1.asyncHandler)(organization_controller_1.createOrganizationController));
router.put('/:id', auth_1.requireAuth, (0, validation_1.validateParams)(idParam), (0, validation_1.validateBody)(organization_dto_1.updateOrganizationSchema), (0, asyncHandler_1.asyncHandler)(organization_controller_1.updateOrganizationController));
router.delete('/:id', auth_1.requireAuth, (0, validation_1.validateParams)(idParam), (0, asyncHandler_1.asyncHandler)(organization_controller_1.deleteOrganizationController));
router.post('/:id/members', auth_1.requireAuth, (0, validation_1.validateParams)(idParam), (0, validation_1.validateBody)(organization_dto_1.addMemberSchema), (0, asyncHandler_1.asyncHandler)(organization_controller_1.addMemberController));
router.put('/:id/members/:userId', auth_1.requireAuth, (0, validation_1.validateParams)(idParam.merge(userIdParam)), (0, validation_1.validateBody)(organization_dto_1.updateMemberRoleSchema), (0, asyncHandler_1.asyncHandler)(organization_controller_1.updateMemberRoleController));
router.delete('/:id/members/:userId', auth_1.requireAuth, (0, validation_1.validateParams)(idParam.merge(userIdParam)), (0, asyncHandler_1.asyncHandler)(organization_controller_1.removeMemberController));
exports.default = router;
